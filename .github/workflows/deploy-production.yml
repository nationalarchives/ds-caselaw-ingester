name: Deploy lambda to AWS (production)

on:
  release:
    types: [published]

permissions:
  id-token: write
  contents: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: true
      - name: Run latest-tag
        uses: EndBug/latest-tag@7589411ebda7bc8f98deb2dbc37e3dc45828f7d0 # v1.6.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - uses: aws-actions/setup-sam@819220f63fb333a9a394dd0a5cab2d8303fd17e2 # v2
      - uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_PRODUCTION_ROLE_ARN }}
          aws-region: eu-west-2
      - run: sam build --use-container -m requirements/base.txt
      - run: > # zizmor: ignore[template-injection]
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ds-caselaw-ingester --s3-bucket tna-caselaw-ingester-deploy --capabilities CAPABILITY_IAM --region eu-west-2 --parameter-overrides
          AwsBucketName=${{ vars.PRIVATE_ASSET_BUCKET  }}
          EditorialUiBaseUrl=${{ vars.EDITORIAL_UI_BASE_URL  }}
          MarklogicHost=${{ secrets.MARKLOGIC_HOST }}
          MarklogicPassword=${{ secrets.MARKLOGIC_PASSWORD }}
          MarklogicUser=${{ secrets.MARKLOGIC_USER }}
          MaxRetries=${{ vars.MAX_RETRIES  }}
          NotifyApiKey=${{ secrets.NOTIFY_API_KEY }}
          NotifyEditorialAddress=${{ vars.NOTIFY_EDITORIAL_ADDRESS  }}
          NotifyNewJudgmentTemplateId=${{ vars.NOTIFY_NEW_JUDGMENT_TEMPLATE_ID  }}
          NotifyUpdatedJudgmentTemplateId=${{ vars.NOTIFY_UPDATED_JUDGMENT_TEMPLATE_ID  }}
          PublicAssetBucket=${{ vars.PUBLIC_ASSET_BUCKET  }}
          RollbarEnv=${{ vars.ROLLBAR_ENV  }}
          RollbarToken=${{ secrets.ROLLBAR_TOKEN }}
          SqsQueueUrl=${{ vars.SQS_QUEUE_URL }}
          VpcSubnetId0=${{ vars.VPC_SUBNET_ID_0 }}
          VpcSubnetId1=${{ vars.VPC_SUBNET_ID_1 }}
          VpcSubnetId2=${{ vars.VPC_SUBNET_ID_2 }}
          VpcSecurityGroupId=${{ vars.VPC_SECURITY_GROUP_ID }}
