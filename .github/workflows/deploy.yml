name: Deploy lambda to AWS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          persist-credentials: false
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - uses: aws-actions/setup-sam@f664fad9e12492edfc187a31f575537dfbb0ff63 # v2
      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_STAGING_ROLE_ARN }}
          aws-region: eu-west-2
      - run: sam build --use-container -m requirements/base.txt
      - run: > # zizmor: ignore[template-injection]
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ds-caselaw-ingester --s3-bucket ingester-test-2 --capabilities CAPABILITY_IAM --region eu-west-2 --parameter-overrides
          AwsBucketName=${{ vars.PRIVATE_ASSET_BUCKET }}
          EditorialUiBaseUrl=${{ vars.EDITORIAL_UI_BASE_URL }}
          MarklogicHost=${{ secrets.MARKLOGIC_HOST }}
          MarklogicPassword=${{ secrets.MARKLOGIC_PASSWORD }}
          MarklogicUser=${{ secrets.MARKLOGIC_USER }}
          MaxRetries=${{ vars.MAX_RETRIES }}
          NotifyApiKey=${{ secrets.NOTIFY_API_KEY }}
          NotifyEditorialAddress=${{ vars.NOTIFY_EDITORIAL_ADDRESS }}
          NotifyNewJudgmentTemplateId=${{ vars.NOTIFY_NEW_JUDGMENT_TEMPLATE_ID }}
          NotifyUpdatedJudgmentTemplateId=${{ vars.NOTIFY_UPDATED_JUDGMENT_TEMPLATE_ID }}
          PublicAssetBucket=${{ vars.PUBLIC_ASSET_BUCKET }}
          RollbarEnv=${{ vars.ROLLBAR_ENV }}
          RollbarToken=${{ secrets.ROLLBAR_TOKEN }}
          SnsTopic=${{ vars.SNS_TOPIC }}
          SqsQueueUrl=${{ vars.SQS_QUEUE_URL }}
          VpcSubnetId0=${{ vars.VPC_SUBNET_ID_0 }}
          VpcSubnetId1=${{ vars.VPC_SUBNET_ID_1 }}
          VpcSubnetId2=${{ vars.VPC_SUBNET_ID_2 }}
          VpcSecurityGroupId=${{ vars.VPC_SECURITY_GROUP_ID }}
